Test deploy with persisting a template

Pre-condition: there is a config file in config/example.conf
Post-condition: there will be no template file after execution
--------------------------------------------------------------------------------

>>> import sys, os, pathlib
>>> import descriptor as dscr, run, handler as tmpl

# Absolute filepath to ${PWD}/tests/config/example.conf
# JSON decoding needs four backward slashes
>>> filepath = os.path.join(pathlib.Path().parent.absolute(), 'tests', 'config', 'example.conf').replace('\\', '\\\\')

>>> os.environ[dscr.EnvironLoader.SOURCE_ENV_VAR] = \
...     '[{"config": "' + filepath + '", "assign": {"pwd": "ENV_PASSWORD"}, "persist": true}]'
>>> os.environ['ENV_PASSWORD'] = 'bLupdLr4R2HY'

# load deployment descriptor
>>> config = run.deploy(persist_config=False)[0]
Deploying secrets and variables into example.conf ...
Found variable(s) during templatization 'pwd'.
Instantiated template keyword(s) 'ENV_PASSWORD'.

# print generated template
>>> desc = dscr.EnvironLoader.load()[0]
>>> template_id = tmpl.FileTemplateHdl(tmpl.IniFileConfigHdl(desc.config_id())).template_id()

>>> print(open(template_id, 'r').read())
[account]
user = admin
pwd  ={{.ENV_PASSWORD}}
description =
group = 1
<BLANKLINE>
